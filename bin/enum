#!/usr/bin/env bash

set -e

cli_help(){
    echo "
███████ ███    ██ ██    ██ ███    ███ 
██      ████   ██ ██    ██ ████  ████ 
█████   ██ ██  ██ ██    ██ ██ ████ ██ 
██      ██  ██ ██ ██    ██ ██  ██  ██ 
███████ ██   ████  ██████  ██      ██ 

    
Custom subdomain enumeration script using amass

Usage: enum path/to/recon [path/to/amass_config.ini]"
exit 1
}

enum_domains(){
    cmd="amass enum -df $1"
    if [ $2 ]; then cmd="$cmd -config $2"; fi
    $cmd || true
}

write_enum_results(){
    amass db -names -df $1 || true | sort | uniq > $2
}

check_new_subdomains(){
   new_subdomains=$(amass track -df $1 -last 2 $([ -z $2 ] && printf %s "config $2") | grep Found | awk '{print $2}') 
   if [ -z "$new_subdomains" ];then
       echo "$(tput setaf 1)No new subdomains found"
   else
       echo "$(tput setaf 2)New subdomains found: $(echo $new_subdomains | wc -w)"
   fi
   tput sgr0
}

scan_target(){
    # Check for domains list
    domains_list="$1/domains.txt"
    if [ ! -f $domains_list ]; then
        echo "$(tput setaf 1)$domains_list not found, skipping...$(tput sgr0)"
        echo "------------------------------"
        continue
    fi
    enum_domains $domains_list $AMASS_CONFIG

    # Write enum results
    subdomains_dir="$1/subdomains"
    if [ ! -d $subdomains_dir ]; then
        mkdir $subdomains_dir
    fi
    write_enum_results $domains_list "$subdomains_dir/$results_filename"
    check_new_subdomains $domains_list $AMASS_CONFIG
    echo "------------------------------"
}

if [ -z $1 ]; then
    cli_help
fi

TARGETS_DIR=$1
AMASS_CONFIG=$2

if [ ! -d "$TARGETS_DIR" ]; then
    echo "Directory '$TARGETS_DIR' does not exist"
    cli_help
fi

if [ $AMASS_CONFIG ] && [ ! -f $AMASS_CONFIG ]; then
    echo "Configuration file '$AMASS_CONFIG' does not exist"
    cli_help
fi

echo "------------------------------"
echo "[$(tput setaf 3)Targets directory$(tput sgr0)] $TARGETS_DIR"
echo "[$(tput setaf 3)Amass config file$(tput sgr0)] $( if [ $AMASS_CONFIG ]; then echo $AMASS_CONFIG; else echo "N/A"; fi )"
echo "[$(tput setaf 3)Targets found$(tput sgr0)]"
echo "$(ls $TARGETS_DIR)"
echo "------------------------------"

cd $TARGETS_DIR

results_filename="$(date +"%Y%m%d").txt"

# Loop over targets
for target in *; do 
    [ -d $target ] || continue
    echo "[$(tput setaf 3)Enumerating subdomains of target$(tput sgr0)] $target"
    scan_target $target
done

echo ""
echo "[DONE]"
